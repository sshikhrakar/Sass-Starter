$themes: (
  color: (
    default: (
      body: #000000,
      header-bg-left: #dd2476,
      header-bg-right: #ff512f,
      header-font: #ffffff,
      main-bg: #f5f5f5,
      heading: #000000,
      heading-underline-bold: #df2771,
      heading-underline-normal: #c7c7c7,
      tree-bg: #525a96,
      tree-border: #3543a9,
      highlight: #dadada,
      pre-bg: #525a96,
      pre-border: #3543a9,
      pre-font: #ffffff,
      box-bg: #f7ca18,
      footer-bg: #df2771,
      snippet-bg: #ffffff,
      select-bg: #df2771
    ),
    custom: (
      body: #000000,
      header-bg-left: #1b998b,
      header-bg-right: #656176,
      header-font: #ffffff,
      main-bg: #ffffff,
      heading: #534d56,
      heading-underline-bold: #1b998b,
      heading-underline-normal: #656176,
      tree-bg: #656176,
      tree-border: #534d56,
      highlight: #c2dfe3,
      pre-bg: #656176,
      pre-border: #534d56,
      pre-font: #ffffff,
      box-bg: #1b998b,
      footer-bg: #1b998b,
      snippet-bg: #f5f5f5,
      select-bg: #1b9988
    )
  ),
  size: (
    cozy: (
      headerHeadingFont: 32px,
      headerSubheadingFont: 14px,
      headerParagraphFont: 16px,
      headerPadding: 20px 0,
      componentHeadingFont: 18px,
      componentSubheadingFont: 16px,
      componentParagraphFont: 12px,
      componentPadding: 15px 0,
      blockSegmentPadding: 8px 0,
      dottedMarginTop: 20px,
      preComponentFont: 12px,
      selectPadding: 6px 8px,
      selectFontSize: 12px
    ),
    comfortable: (
      headerHeadingFont: 46px,
      headerSubheadingFont: 16px,
      headerParagraphFont: 18px,
      headerPadding: 40px 0,
      componentHeadingFont: 22px,
      componentSubheadingFont: 18px,
      componentParagraphFont: 16px,
      componentPadding: 30px 0,
      blockSegmentPadding: 20px 0,
      dottedMarginTop: 30px,
      preComponentFont: 14px,
      selectPadding: 8px 16px,
      selectFontSize: 14px
    )
  )
);

@mixin themify($themes) {
  @each $theme, $map in $themes {
    .theme-#{$theme} & {
      $theme-map: () !global;
      @each $key, $value in $map {
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value
          )
        ) !global;
      }

      @content;
      $theme-map: null !global;
    }
  }
}

@function theme-property($key) {
  @return map-get($theme-map, $key);
}

@function theme-type($type) {
  @return map-get($themes, $type);
}
